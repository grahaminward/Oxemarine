{
	"name": "Alternate_1_usp_silver_device",
	"properties": {
		"folder": {
			"name": "ldw/USP"
		},
		"content": {
			"query": "use oxemarine_ldw\nGO\n\n/*\nselect device, EngineInstance, EngineModel,EngineSwVersion, EngineFwVersion, EngineSerialnumber,\n                best_row = row_number() over (Partition by device,EngineInstance, EngineModel order by tot_Len desc)\nfrom (\nselect distinct device,\n                [EngineInstance]     = case when [EngineOilPressure0] is not null then 1\n                                   when [EngineOilPressure1] is not null then 2\n                                   when [EngineOilPressure2] is not null then 3\n                                   when [EngineOilPressure3] is not null then 4\n                              else -1\n                              end, \n                EngineModel,EngineSwVersion, EngineFwVersion, EngineSerialnumber,\n                tot_Len = len(EngineSwVersion) + len(EngineFwVersion) + len(EngineSerialnumber)\n\nFROM bronze.vw_device\n        WHERE   device = '4CC52878'\n            AND year   = '2023'\n            AND month  = '03'\n            AND day    = '01'\n            AND EngineModel is not NULL\n            AND EngineSwVersion is not NULL\n            AND EngineFwVersion is not NULL\n            AND EngineSerialnumber is not null\n) a\n*/\n\nCREATE OR ALTER PROCEDURE silver.usp_silver_device\n@device varchar(10),\n@year varchar(4),\n@month varchar(2),\n@day varchar(2)\nAS\nBEGIN\n    DECLARE @create_sql_stmt nvarchar(max),\n            @drop_sql_stmt   nvarchar(max),\n            @UniqueNumber    varchar(20) = (select cast(CONVERT (TIME, SYSDATETIME()) as varchar(20)))\n\n            set @UniqueNumber = replace(replace(@UniqueNumber,':','_'),'.','_')\n\n    set @create_sql_stmt =\n        'CREATE EXTERNAL TABLE silver.device_' + @device + '_' + @year + '_' + @month + '_' + @day + '_' + @UniqueNumber +\n        ' WITH\n            (\n                DATA_SOURCE = oxemarine_src,\n                LOCATION = ''silver/DEVICE/Device=' + @device + '/year=' + @year + '/month=' + @month + '/day=' + @day + '/' + @UniqueNumber + ''',\n                FILE_FORMAT = parquet_file_format\n            )\n        AS\n\n       with getModel as (\n             select device, EngineInstance, EngineModel,EngineSwVersion, EngineFwVersion, EngineSerialnumber,\n                best_row = row_number() over (Partition by device,EngineInstance, EngineModel order by tot_Len desc)\n                  from (\n                  select distinct device,\n                              [EngineInstance]     = case when [EngineOilPressure0] is not null then 1\n                                                when [EngineOilPressure1] is not null then 2\n                                                when [EngineOilPressure2] is not null then 3\n                                                when [EngineOilPressure3] is not null then 4\n                                                else -1\n                                                end, \n                              EngineModel,EngineSwVersion, EngineFwVersion, EngineSerialnumber,\n                              tot_Len = len(EngineSwVersion) + len(EngineFwVersion) + len(EngineSerialnumber)\n\n                  FROM bronze.vw_device\n                        WHERE   device = ''' + @device + '''\n                              AND year   = ''' + @year   + '''\n                              AND month  = ''' + @month  + '''\n                              AND day    = ''' + @day    + '''\n                              AND EngineModel is not NULL\n                              AND EngineSwVersion is not NULL\n                              AND EngineFwVersion is not NULL\n                              AND EngineSerialnumber is not null\n                  ) a\n       ) \n        \n        SELECT\n    v.device,\n    v.year,\n    v.month,\n    v.day,\n    [timestamp]\n--ActualPressure\n      ,[PressureSource]\n      ,[AtmosphericPressure]\n      ,[FuelRailPressure]\n--ActuatorCommand\n      ,[GearCommand]      \n      ,[ThrottleCommand]  \n--CogSogRapidUpdate      \n      ,[CourseOverGround]   \n      ,[CourseOverGround_deg] \n      ,[SpeedOverGround]    \n      ,[SpeedOverGround_kn]\n--EngineParametersDynamic      \n      ,[EngineInstance]     =  g.EngineInstance\n      ,[EngineOilPressure]  = case when [EngineOilPressure0] is not null then [EngineOilPressure0]\n                                   when [EngineOilPressure1] is not null then [EngineOilPressure1]\n                                   when [EngineOilPressure2] is not null then [EngineOilPressure2]\n                                   when [EngineOilPressure3] is not null then [EngineOilPressure3]\n                              else null\n                              end\n      ,[EngineOilTemp]     \n      ,[EngineCoolantTemp] \n      ,[BatteryVoltage]    \n      ,[FuelRate]          \n      ,[TotalEngineHours]   \n      ,[EngineLoad]         \n--EngineParametersRapid\n      ,[EngineSpeed]\n      ,[BoostPressure]\n      ,[PttTrim]\n--OxeProprietary1 \n      ,[ActualClutchSlip]\n      ,[ControlheadPosition]\n      ,[PropellerSpeed]\n      ,[RequestClutchSlip]\n--OxeProprietary4\n      ,[GpcState]\n      ,[GpcDuty]\n      ,[GpcModuleFaults]\n--PcmFeedback\n      ,[PortCylinderPosition]\n      ,[StbdCylinderPosition]\n--PositionRapidUpdate\n      ,[Latitude]       \n      ,[Longitude]     \n--ProductInformation     \n      ,[EngineModel]        = ISNULL(g.EngineModel, v.EngineModel)\n      ,[EngineSwVersion]    = ISNULL(g.EngineSwVersion, v.EngineSwVersion)\n      ,[EngineFwVersion]    = ISNULL(g.EngineFwVersion,v.EngineFwVersion)\n      ,[EngineSerialnumber] = ISNULL(g.EngineSerialnumber, v.EngineSerialnumber)\n--TemperatureExtendedRange\n      ,[TemperatureSource]\n      ,[EngineRoomTemp]\n      ,[ExhaustGasTemp]\n      ,[IntakeManifoldTemp]\n      ,[FuelTemp]\n      ,[EcuTemp]\n      ,[CompressorOutTemp]\n--TransmissionParametersDynamic\n      ,[GearboxOilPressure]\n      ,[GearboxGear]\n      ,[GearboxOilTemp]\n--TripParametersEngine    \n      ,[FuelUsed]          \n      ,[FuelRateAverage]    \n\n        FROM bronze.vw_device v\n        JOIN getModel g\n              ON v.device = g.device\n                  AND (case when v.[EngineOilPressure0] is not null then 1\n                            when v.[EngineOilPressure1] is not null then 2\n                            when v.[EngineOilPressure2] is not null then 3\n                            when v.[EngineOilPressure3] is not null then 4\n                            else -1\n                            end) = g.EngineInstance\n                  AND  v.EngineModel = g.EngineModel\n        WHERE   v.device = ''' + @device + '''\n            AND v.year   = ''' + @year   + '''\n            AND v.month  = ''' + @month  + '''\n            AND v.day    = ''' + @day    + '''' ;\n\n    print(@create_sql_stmt)\n    --EXEC sp_executesql @create_sql_stmt\n\n    SET @drop_sql_stmt =\n        'DROP EXTERNAL TABLE silver.device_' + @device + '_' + @year + '_' + @month + '_' + @day  + '_' + @UniqueNumber;\n\n    print(@drop_sql_stmt)\n    --EXEC sp_executesql @drop_sql_stmt\n\n\nEND;",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "oxemarine_ldw",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}